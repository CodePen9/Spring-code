<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 创建带有生命周期方法的bean -->
    <!--
         生命周期：bean的创建到销毁;
         ioc容器中注册的bean:
            1> 单实例bean,容器启动的时候才会创建好,容器的关闭也会销毁创建的bean
            2> 多实例bean,获取的时候才会创建
         我们可以为bean自定义一些生命周期方法：spring创建或销毁时会调用指定的方法;
         init-method:初始化方法;  destroy-method:销毁方法;
     -->
    <bean id="book01" class="com.jiang.bean.Book" init-method="myInit" destroy-method="myDestory"></bean>


    <!-- Bean的后置处理器：BeanPostProcessor
         Spring有一个接口：后置处理器，可以在bean初始化前后调用方法
       -->
    <bean id="beanPostProcessor" class="com.jiang.bean.MyBeanPostProcessor"></bean>
    <!--
    book01将要调用初始化方法了...这个bean是这样Book{bookName='null', price=null}
    这是图书的初始化方法..
    book01初始化方法调用完了...这个bean是这样Book{bookName='null', price=null}
    -->
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        通过注解分别创建Dao、Service、Controller
        通过给bean添加某些注解，可以快速的将bean添加到容器中
    -->

    <!--
        给任何一个类加入以下任何一个注解都能将快速的将这个组件添加到ioc容器的管理中
        Spring中有四个注解：
        @Controller ：控制器，推荐给控制器层的组件使用这个注解，也就是servlet层
        @Service ：业务逻辑层，推荐给业务逻辑层的组件使用这个注解，也就是service层
        @Repository ：持久化层，推荐给数据库层的组件使用这个注解，也就是dao层
        @Component : 组件的意思，给不属于以上几层的组件添加 这个注解

        ps：注解可以随便加，Spring底层不会去验证你的组件，
        是否如你注解所说的就是一个dao层或者servlet层组件
        但是我们推荐还是各层加各自的注解，因为这是给我们程序员看的，方便维护和阅读代码
    -->
    <!--
        通过注解将组件快速的加入的ioc容器中过程：
            1.给需要添加的组件上标四个注解的任何一个
            2.告诉Spring 自动扫描加了注解的组件：依赖context名称空间
            3.一定要导入aop包，支持注解模式

        使用注解添加到容器中的组件，和使用配置文件加入到容器的组件行为都是默认一样的。
            1.组件的id是类名的首字母小写，即BookDao -> bookDao
            2.组件的作用域，默认都是单例的。
            3.如果要修改默认id，就可以在注解后面("name")即可，@Repository("book")
            4.如果要修改作用域，则通过@Scope注解进行修改，@Scope(value = "prototype")
       -->

    <!--
        context:component-scan:自动组件扫描
        base-package:指定扫描的基础包：把基础包及他下面所有的包的所有加了注解的类，自动扫描进ioc容器中
    -->

    <!-- <context:component-scan base-package="com.jiang.*" use-default-filters="false">-->
       <!--
        context:exclude-filter：排除一些不要的组件
           【type="annotation"】 : 指定排除规则：按照注解排除，标注指定的注解的组件不要了
               expression="" ：注解的全类名 （org.springframework.stereotype.Repository）

           【type="assignable"】: 指定排除某个具体的类，按照类排除
               expression="" ：类的全类名

           【type="aspectj"】: 后来的aspectj表达式，没人用过
           【type="custom"】：自定义，实现TypeFilter接口，实现match方法，返回true不要，返回false要
           【type="regex"】：还可以写正则表达式

       -->
        <!--<context:exclude-filter type="regex" expression="org.springframework.stereotype.Repository"/>-->
        
        <!--
        context:exclude-filter：指定只扫描哪些组件
           注意：用之前一定要禁用掉默认规则，因为它默认就是全部扫描进来 use-default-filters="false"

            【type="annotation"】 : 指定扫描规则：按照注解扫描，标注指定的注解的组件扫描进来
                expression="" ：注解的全类名 （org.springframework.stereotype.Repository）

            【type="assignable"】: 指定扫描某个具体的类，按照类扫描
                expression="" ：类的全类名

            【type="aspectj"】: 后来的aspectj表达式，没人用过
            【type="custom"】：自定义，实现TypeFilter接口，实现match方法，返回true不要，返回false要
            【type="regex"】：还可以写正则表达式

        -->
    <!--
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    -->
</beans>
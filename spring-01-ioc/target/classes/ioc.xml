<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 注册一个Person对象 Spring会自动创建这个Person对象 -->
    <!--
        一个Bean标签可以注册一个组件(对象，类)
        class 写注册的组件的全类名
        id 这个对象的唯一标识
    -->
    <bean id="person01" class="com.jiang.bean.Person">
        <!--
            使用property标签为 对象赋值
            name 指定对应的class文件里的属性名
            value 指定属性值
        -->
        <property name="lastName" value="张三"></property>
        <property name="age" value="18"></property>
        <property name="gender" value="男"></property>
        <property name="email" value="123456@qq.com"></property>

    </bean>

    <!-- 这是为第二个test 测试如果2个同类型注册的组件通过bean类型读取会有什么效果 -->
    <bean id="person02" class="com.jiang.bean.Person">
        <property name="lastName" value="王五"></property>
    </bean>

    <!-- 这是第三个test 测试通过构造器的方式为bean赋值 -->
    <bean id="person03" class="com.jiang.bean.Person">
        <!-- 调用有参构造器进行创建对象并赋值 -->
        <!-- public Person(String lastName, String gender, Integer age, String email) {-->
        <constructor-arg name="lastName" value="小明"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="email" value="123456@qq.com"></constructor-arg>
        <constructor-arg name="gender" value="男"></constructor-arg>
    </bean>

    <!-- 这是第三个test 测试通过构造器的方式为bean赋值 可以省略name 但必须按照顺序-->
    <bean id="person04" class="com.jiang.bean.Person">
        <!-- 调用有参构造器进行创建对象并赋值 -->
        <!-- public Person(String lastName, String gender, Integer age, String email) {-->
        <constructor-arg value="小明"></constructor-arg>
        <constructor-arg value="男"></constructor-arg>
        <constructor-arg value="18"></constructor-arg>
        <constructor-arg value="123456@qq.com"></constructor-arg>

    </bean>

    <!-- Test4
        通过p命名空间为bean赋值：导入p名称空间
        命名空间：在xml中名称空间是用来防止标签重复的
       <?xml version="1.0" encoding="UTF-8"?>
       <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       </beans>
       需要导入
     -->
    <bean id="person05" class="com.jiang.bean.Person"
        p:age="18" p:email="123456@qq.com" p:gender="男" p:lastName="小孙"        >

    </bean>



</beans>